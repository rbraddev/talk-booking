name: Dev - Code Quality and Test

on:
  push:
    branches:
      - master
    paths:
      - services/talk_booking/**/*
  workflow_dispatch: 

permissions:
  id-token: write   

jobs:
  code-quality:
    defaults:
      run:
        working-directory: services/talk_booking
    strategy:
      matrix:
        python-version: ['3.10']
        poetry-version: ['1.1.12']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: poetry install
      - name: Run black
        run: poetry run black . --check
      - name: Run isort
        run: poetry run isort . --check-only --profile black
      - name: Run flake8
        run: poetry run flake8 .
      - name: Run bandit
        run: poetry run bandit .
      - name: Run saftey
        run: poetry run safety check
  test:
    needs: [code-quality]
    defaults:
      run:
        working-directory: services/talk_booking
    strategy:
      matrix:
        python-version: ['3.10']
        poetry-version: ['1.1.12']
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: talkbooking
          POSTGRES_DB: talkbookingtest
          POSTGRES_USER: app
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: poetry install
      - name: Run tests
        run: poetry run pytest --cov=./ --cov-report=xml tests/unit tests/integration
        env:
          APP_ENVIRONMENT: test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
