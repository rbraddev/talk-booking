name: Talk Booking Code Quality, Test and Build

on:
  push:
    branches:
      - master
    paths:
      - services/talk_booking/**/*
  workflow_dispatch: 

permissions:
  id-token: write   

jobs:
  code-quality:
    defaults:
      run:
        working-directory: services/talk_booking
    strategy:
      matrix:
        python-version: ['3.10']
        poetry-version: ['1.1.12']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: poetry install
      - name: Run black
        run: poetry run black . --check
      - name: Run isort
        run: poetry run isort . --check-only --profile black
      - name: Run flake8
        run: poetry run flake8 .
      - name: Run bandit
        run: poetry run bandit .
      - name: Run saftey
        run: poetry run safety check
  test:
    needs: [code-quality]
    defaults:
      run:
        working-directory: services/talk_booking
    strategy:
      matrix:
        python-version: ['3.10']
        poetry-version: ['1.1.12']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: poetry install
      - name: Run tests
        run: poetry run pytest --cov=./ --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
  build_docker_image:
    needs: [test]
    defaults:
      run:
        working-directory: services/talk_booking
    strategy:
      matrix:
        python-version: ['3.10']
        poetry-version: ['1.1.12']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Extract Requirements
        run: poetry export --without-hashes --with-credentials -f requirements.txt > requirements.txt
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: eu-west-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: talk-booking-dev
          IMAGE_TAG: development-${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  deploy_docker_image:
    needs: [build_docker_image]
    uses: ./.github/workflows/deploy_docker_image.yaml
    with:
      environment_name: talk-booking-dev
      docker_image_tag: ${{ steps.login-ecr.outputs.registry }}/talk-booking-dev:development-${{ github.sha }}
    secrets:
      aws_role_arn: ${{ secrets.AWS_ROLE_ARN }}
      # aws_region: eu-west-2
